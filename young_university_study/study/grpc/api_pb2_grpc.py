# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from. import api_pb2 as api__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class CreditStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddScore = channel.unary_unary(
                '/credit.service.v1.Credit/AddScore',
                request_serializer=api__pb2.AddScoreReq.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetAll = channel.unary_unary(
                '/credit.service.v1.Credit/GetAll',
                request_serializer=api__pb2.GetAllReq.SerializeToString,
                response_deserializer=api__pb2.Scores.FromString,
                )
        self.GetScore = channel.unary_unary(
                '/credit.service.v1.Credit/GetScore',
                request_serializer=api__pb2.GetScoreReq.SerializeToString,
                response_deserializer=api__pb2.SumScore.FromString,
                )
        self.GetScoreOld = channel.unary_unary(
                '/credit.service.v1.Credit/GetScoreOld',
                request_serializer=api__pb2.GetScoreOldReq.SerializeToString,
                response_deserializer=api__pb2.SumScore.FromString,
                )


class CreditServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AddScore(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAll(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetScore(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetScoreOld(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CreditServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddScore': grpc.unary_unary_rpc_method_handler(
                    servicer.AddScore,
                    request_deserializer=api__pb2.AddScoreReq.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetAll': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAll,
                    request_deserializer=api__pb2.GetAllReq.FromString,
                    response_serializer=api__pb2.Scores.SerializeToString,
            ),
            'GetScore': grpc.unary_unary_rpc_method_handler(
                    servicer.GetScore,
                    request_deserializer=api__pb2.GetScoreReq.FromString,
                    response_serializer=api__pb2.SumScore.SerializeToString,
            ),
            'GetScoreOld': grpc.unary_unary_rpc_method_handler(
                    servicer.GetScoreOld,
                    request_deserializer=api__pb2.GetScoreOldReq.FromString,
                    response_serializer=api__pb2.SumScore.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'credit.service.v1.Credit', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Credit(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AddScore(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/credit.service.v1.Credit/AddScore',
            api__pb2.AddScoreReq.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/credit.service.v1.Credit/GetAll',
            api__pb2.GetAllReq.SerializeToString,
            api__pb2.Scores.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetScore(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/credit.service.v1.Credit/GetScore',
            api__pb2.GetScoreReq.SerializeToString,
            api__pb2.SumScore.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetScoreOld(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/credit.service.v1.Credit/GetScoreOld',
            api__pb2.GetScoreOldReq.SerializeToString,
            api__pb2.SumScore.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
